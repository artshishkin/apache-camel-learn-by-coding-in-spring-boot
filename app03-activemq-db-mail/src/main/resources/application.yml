spring:
  profiles:
    active: dev
  datasource:
    url: jdbc:postgresql://localhost:5432/learn_camel
    username: postgres
    password: 123
    driver-class-name: org.postgresql.Driver
  mail:
    host: smtp.gmail.com
    port: 587
    properties.mail.smtp.auth: true
    properties.mail.smtp.starttls.enable: true
#    password: -> set via env variables
#    username: -> set via env variables
  activemq:
    broker-url: tcp://localhost:61616
    user: admin
    password: admin

healthRouteStart: timer:healthRoute?period=10s
healthRouteUri:  http://localhost:8080/actuator/health

mailto: d.art.shishkin@gmail.com
mailFrom: d.art.shishkin@gmail.com

routeFromUri: activemq:inputItemQueue
routeTo1Uri: jdbc:dataSource?useHeadersAsParameters=true
routeTo2Uri: log:sqlLog?level=INFO&showBody=true

errorRoute: activemq:errorItemQueue

selectNode: sql:select * from ITEMS where sku=:#sku
---
spring:
  profiles: dev

message: DEV Environment
valueMessage: DEV value
envMessage: DEV env

camel:
  springboot:
    shutdown-timeout: 60

management:
  endpoint:
    health:
      show-details: always
      show-components: always
    camelroutes:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'

---
spring:
  profiles: mock

routeFromUri: direct:input
routeTo1Uri: mock:output
routeTo2Uri: mock:output2
routeTo3Uri: mock:output3

errorRoute: mock:outputError

healthRouteStart: direct:health

message: MOCK Environment
valueMessage: MOCK value
envMessage: MOCK env

---
spring:
  profiles: stage

message: STAGE Environment
valueMessage: STAGE value
envMessage: STAGE env

---
spring:
  profiles: prod

message: PROD Environment
valueMessage: PROD value
envMessage: PROD env
